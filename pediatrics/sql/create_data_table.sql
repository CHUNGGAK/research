/* 소아청소년과 추출항목 (2019-04-09)
   - 추출기준일(8개) : 진단일, 3개월, 6개월, 12개월, 24개월, 36개월, 48개월, 60개월
     : 6개월 까지는 전후 1.5개월(45일)을, 12개월 이후 시점부터는 전후 3개월 데이터를 기준으로 추출
     : Index date~45, 46~135, 136~227, 273~455, 638~820, 1003~1185, 1368~1550, 1733~1915
   - DAY_OF_BIRTH 필드 제외
   - 측정데이터 원천 다중화 (원천변경은 IN_PARAM.MEASUREMENT_SOURCE의 값만 변경하면 됨)
     : 키/체중/BMI : MEASUREMENT OR OBSERVATION
     : HbA1c : MEASUREMENT
   - COHORT_ID가 변경되면 IN_PARAM.COHORT_ID의 값을 변경
   - 당뇨병 종류(Type1, Type2) 추가
   - 신환환자만 선택
     1) 0, 3개월 사이의 HbA1c가 1이상 감소한 경우
     2) 0개월 근처(진단시점 INDEX_DATE ~ +3개월 이내) GAD Ab 검사가 최소 1번 있는 경우
     3) 0, 3개월 사이의 Weight가 증가한 경우
   - 해당 환자의 키/몸무게 데이터 추출 시 이상치 제거
     1) Weight : "환자별 0M Weight(Median) * 80%" ~ "환자별 마지막 시점의 Weight(Median) * 120%"
     2) Height : "환자별 0M Height(Median) * 97%" ~ "환자별 마지막 시점의 Height(Median) * 103%"

   - 2019-05-08 수정
     1) DM type 구분하는 CONDITION_DATA_DM에서 5년 기간 제거
   2) DKA는 진단 and 검사로 수정
   3) DKA 진단기준을 CONCEPT_ID에서 CONDITION_SOURCE_VALUE (ICD10)로 변경
   4) 키, 몸무게, BMI와 HbA1c, GAD Ab 검사를 구분하였음

   - 2019-06-19 수정
     1) MEASUREMENT_SOURCE 테이블을 지정하였음 (Measurement : 키,몸무게,BMI,HbA1c,GAD Ab)
   2) 최종 Select 구문에서 Date field를 char로 type 변경
*/

WITH IN_PARAM AS (
     SELECT 4177340 AS CONCEPT_ID_HEIGHT /* 4177340(Height) */
          , 4099154 AS CONCEPT_ID_WEIGHT /* 4099154(Weight) */
          , 4245997 AS CONCEPT_ID_BMI    /* 4245997(BMI(EMR)) */
          , 3005673 AS CONCEPT_ID_HBA1C  /* 3005673(HbA1c) */
          , 3020148 AS CONCEPT_ID_GADAB  /* 3020148(GAD Ab 검사) */
--          , '2' AS MEASUREMENT_SOURCE1 /* Height and Weight and BMI - '1':MEASUREMENT, '2':OBSERVATION */
--          , '2' AS MEASUREMENT_SOURCE2 /* HbA1c and GAD Ab          - '1':MEASUREMENT, '2':OBSERVATION */
          , 128 AS COHORT_ID     /* 2017버전은 4686 */
          , 0.97 AS HEIGHT_FR_RT /* HEIGHT 최저 가중치 */
          , 1.03 AS HEIGHT_TO_RT /* HEIGHT 최고 가중치 */
          , 0.8  AS WEIGHT_FR_RT /* WEIGHT 최저 가중치 */
          , 1.2  AS WEIGHT_TO_RT /* WEIGHT 최고 가중치 */
       FROM DUAL
     )
   , COHORT_DATA AS (
     SELECT Z1.COHORT_ID
          , A1.SUBJECT_ID AS PERSON_ID
          , A1.COHORT_START_DATE
          , A1.COHORT_START_DATE - 45            AS COHORT_START_DATE_00M_BF
          , A1.COHORT_START_DATE - 1             AS COHORT_START_DATE_00M
          , A1.COHORT_START_DATE + 45            AS COHORT_START_DATE_00M_AF
          , A1.COHORT_START_DATE + 46            AS COHORT_START_DATE_03M_BF
          , ADD_MONTHS(A1.COHORT_START_DATE,  3) AS COHORT_START_DATE_03M
          , A1.COHORT_START_DATE + 135           AS COHORT_START_DATE_03M_AF
          , A1.COHORT_START_DATE + 136           AS COHORT_START_DATE_06M_BF
          , ADD_MONTHS(A1.COHORT_START_DATE,  6) AS COHORT_START_DATE_06M
          , A1.COHORT_START_DATE + 227           AS COHORT_START_DATE_06M_AF
          , ADD_MONTHS(A1.COHORT_START_DATE,  9) AS COHORT_START_DATE_12M_BF
          , ADD_MONTHS(A1.COHORT_START_DATE, 12) AS COHORT_START_DATE_12M
          , ADD_MONTHS(A1.COHORT_START_DATE, 15) AS COHORT_START_DATE_12M_AF
          , ADD_MONTHS(A1.COHORT_START_DATE, 21) AS COHORT_START_DATE_24M_BF
          , ADD_MONTHS(A1.COHORT_START_DATE, 24) AS COHORT_START_DATE_24M
          , ADD_MONTHS(A1.COHORT_START_DATE, 27) AS COHORT_START_DATE_24M_AF
          , ADD_MONTHS(A1.COHORT_START_DATE, 33) AS COHORT_START_DATE_36M_BF
          , ADD_MONTHS(A1.COHORT_START_DATE, 36) AS COHORT_START_DATE_36M
          , ADD_MONTHS(A1.COHORT_START_DATE, 39) AS COHORT_START_DATE_36M_AF
          , ADD_MONTHS(A1.COHORT_START_DATE, 45) AS COHORT_START_DATE_48M_BF
          , ADD_MONTHS(A1.COHORT_START_DATE, 48) AS COHORT_START_DATE_48M
          , ADD_MONTHS(A1.COHORT_START_DATE, 51) AS COHORT_START_DATE_48M_AF
          , ADD_MONTHS(A1.COHORT_START_DATE, 57) AS COHORT_START_DATE_60M_BF
          , ADD_MONTHS(A1.COHORT_START_DATE, 60) AS COHORT_START_DATE_60M
          , ADD_MONTHS(A1.COHORT_START_DATE, 63) AS COHORT_START_DATE_60M_AF
          , A1.COHORT_END_DATE
          , A2.GENDER_CONCEPT_ID
          , A2.YEAR_OF_BIRTH
          , A2.MONTH_OF_BIRTH
          , A2.DAY_OF_BIRTH
       FROM COHORT A1 --SNUBH_RESULTS.COHORT A1
          , CDM_2018_VIEW.PERSON A2
          , IN_PARAM Z1
      WHERE A1.SUBJECT_ID = A2.PERSON_ID
        AND A1.COHORT_DEFINITION_ID = Z1.COHORT_ID
        -- AND A1.SUBJECT_ID IN (152485474756460, 252545470725856)
     )
   , CONDITION_DATA AS (
     SELECT B1.PERSON_ID
          , MAX(DECODE(B2.CONDITION_CONCEPT_ID,  443727, 1, 0)) AS DKA_YN
          , MAX(DECODE(B2.CONDITION_CONCEPT_ID, 4147719, 1, 0)) AS HHS_YN
       FROM COHORT_DATA B1
          , CDM_2018_VIEW.CONDITION_OCCURRENCE B2
      WHERE B1.PERSON_ID = B2.PERSON_ID
        AND B2.CONDITION_START_DATE BETWEEN B1.COHORT_START_DATE AND B1.COHORT_END_DATE
        AND B2.CONDITION_CONCEPT_ID IN (443727, 4147719) /* 443727(DKA여부), 4147719(HHS여부) */
      GROUP BY B1.PERSON_ID
     )
   , CONDITION_DATA_NEW AS ( /* 2019-04-07 : (COHORT_START_DATE - 30 DAYS) ~ (COHORT_START_DATE + 7 DAYS) 진단기간 중 발생한 진단코드 사용 */
     SELECT B1.PERSON_ID
          --, MAX(DECODE(B2.CONDITION_CONCEPT_ID,  443727, 1, 0)) AS DKA_YN
          , MAX(CASE WHEN SUBSTR(REPLACE(B2.CONDITION_SOURCE_VALUE, '.', ''), 1, 4) IN ('E101','E111','E140','E141') THEN 1 ELSE 0 END) AS DKA_YN
          , MAX(DECODE(B2.CONDITION_CONCEPT_ID, 4147719, 1, 0)) AS HHS_YN
       FROM COHORT_DATA B1
          , CDM_2018_VIEW.CONDITION_OCCURRENCE B2
      WHERE B1.PERSON_ID = B2.PERSON_ID
        AND B2.CONDITION_START_DATE BETWEEN B1.COHORT_START_DATE - 30 AND B1.COHORT_START_DATE + 7
        AND (B2.CONDITION_CONCEPT_ID IN (4147719)
          OR SUBSTR(REPLACE(B2.CONDITION_SOURCE_VALUE, '.', ''), 1, 4) IN ('E101','E111','E140','E141')) /* 443727(DKA여부), 4147719(HHS여부) */
      GROUP BY B1.PERSON_ID
     )
   , CONDITION_DATA_DM AS ( /* 2019-04-07 : COHORT_START_DATE ~ (COHORT_START_DATE + 5년) 기간 중 가장 마지막에 발생된 CONDITION을 기반으로 당뇨 TYPE 1과 2로 정의 */
                            /* 2019-05-08 : DM 여부에서 5년 기간 제외하고 전체 수진 기록 중으로 변경 */
     SELECT PERSON_ID
          , CASE WHEN LAST_CONDITION_CONCEPT_ID IN (SELECT DESCENDANT_CONCEPT_ID FROM CDM_VOCA.CONCEPT_ANCESTOR WHERE ANCESTOR_CONCEPT_ID = 201254) THEN 1 ELSE 0 END AS DM1 /* 제1형 당뇨병 존재여부 */
          , CASE WHEN LAST_CONDITION_CONCEPT_ID IN (SELECT DESCENDANT_CONCEPT_ID FROM CDM_VOCA.CONCEPT_ANCESTOR WHERE ANCESTOR_CONCEPT_ID = 201826) THEN 1 ELSE 0 END AS DM2 /* 제2형 당뇨병 존재여부 */
       FROM (SELECT B1.PERSON_ID
                  , SUBSTR(MAX(TO_CHAR(B2.CONDITION_START_DATE, 'YYYYMMDD') || B2.CONDITION_CONCEPT_ID), 9) AS LAST_CONDITION_CONCEPT_ID /* 가장 마지막 진단의 CONDITION_CONCEPT_ID */
               FROM COHORT_DATA B1
                  , CDM_2018_VIEW.CONDITION_OCCURRENCE B2
              WHERE B1.PERSON_ID = B2.PERSON_ID
                --AND B2.CONDITION_START_DATE BETWEEN B1.COHORT_START_DATE AND B1.COHORT_START_DATE_60M
                AND B2.CONDITION_CONCEPT_ID IN (SELECT DESCENDANT_CONCEPT_ID
                                                  FROM CDM_VOCA.CONCEPT_ANCESTOR
                                                 WHERE ANCESTOR_CONCEPT_ID IN (201254, 201826) /* 201254(제1형 당뇨병 상위 CONCEPT_ID), 201826(제2형 당뇨병 상위 CONCEPT_ID) */
                                               )
              GROUP BY B1.PERSON_ID
            )
     )
   , MEASUREMENT_DATA AS (
     SELECT C1.PERSON_ID
          , C2.MEASUREMENT_CONCEPT_ID
          , C2.MEASUREMENT_DATE
          , C2.VALUE_AS_NUMBER
          , 'MEASUREMENT' AS MEASUREMENT_SOURCE
       FROM COHORT_DATA C1
          , @CDM_DB_SCHEMA.MEASUREMENT C2
          , IN_PARAM Z1
      WHERE C1.PERSON_ID = C2.PERSON_ID
--        AND Z1.MEASUREMENT_SOURCE1 = '1'
    --AND (Z1.MEASUREMENT_SOURCE1 = '1' OR (Z1.MEASUREMENT_SOURCE1 = '2' AND C2.MEASUREMENT_CONCEPT_ID IN (Z1.CONCEPT_ID_HBA1C)))
        AND C2.MEASUREMENT_CONCEPT_ID IN (Z1.CONCEPT_ID_HEIGHT, Z1.CONCEPT_ID_WEIGHT, Z1.CONCEPT_ID_BMI, Z1.CONCEPT_ID_HBA1C, Z1.CONCEPT_ID_GADAB)
/*      UNION ALL
     SELECT C1.PERSON_ID
          , C2.OBSERVATION_CONCEPT_ID AS MEASUREMENT_CONCEPT_ID
          , C2.OBSERVATION_DATE AS MEASUREMENT_DATE
          , C2.VALUE_AS_NUMBER
          , 'OBSERVATION' AS MEASUREMENT_SOURCE
       FROM COHORT_DATA C1
          , @CDM_DB_SCHEMA.OBSERVATION C2
          , IN_PARAM Z1
      WHERE Z1.MEASUREMENT_SOURCE1 = '2'
        AND C1.PERSON_ID = C2.PERSON_ID
        AND C2.OBSERVATION_CONCEPT_ID IN (Z1.CONCEPT_ID_HEIGHT, Z1.CONCEPT_ID_WEIGHT, Z1.CONCEPT_ID_BMI, Z1.CONCEPT_ID_GADAB)
     )
   , MEASUREMENT_DATA2 AS (
     SELECT C1.PERSON_ID
          , C2.MEASUREMENT_CONCEPT_ID
          , C2.MEASUREMENT_DATE
          , C2.VALUE_AS_NUMBER
          , 'MEASUREMENT' AS MEASUREMENT_SOURCE
       FROM COHORT_DATA C1
          , @CDM_DB_SCHEMA.MEASUREMENT C2
          , IN_PARAM Z1
      WHERE C1.PERSON_ID = C2.PERSON_ID
        AND Z1.MEASUREMENT_SOURCE2 = '1'
    --AND (Z1.MEASUREMENT_SOURCE2 = '1' OR (Z1.MEASUREMENT_SOURCE2 = '2' AND C2.MEASUREMENT_CONCEPT_ID IN (Z1.CONCEPT_ID_HBA1C)))
        AND C2.MEASUREMENT_CONCEPT_ID IN (Z1.CONCEPT_ID_HEIGHT, Z1.CONCEPT_ID_WEIGHT, Z1.CONCEPT_ID_BMI, Z1.CONCEPT_ID_HBA1C, Z1.CONCEPT_ID_GADAB)
      UNION ALL
     SELECT C1.PERSON_ID
          , C2.OBSERVATION_CONCEPT_ID AS MEASUREMENT_CONCEPT_ID
          , C2.OBSERVATION_DATE AS MEASUREMENT_DATE
          , C2.VALUE_AS_NUMBER
          , 'OBSERVATION' AS MEASUREMENT_SOURCE
       FROM COHORT_DATA C1
          , @CDM_DB_SCHEMA.OBSERVATION C2
          , IN_PARAM Z1
      WHERE Z1.MEASUREMENT_SOURCE2 = '2'
        AND C1.PERSON_ID = C2.PERSON_ID
        AND C2.OBSERVATION_CONCEPT_ID IN (Z1.CONCEPT_ID_HEIGHT, Z1.CONCEPT_ID_WEIGHT, Z1.CONCEPT_ID_BMI, Z1.CONCEPT_ID_GADAB)
     )
   , MEASUREMENT_DATA AS (
     SELECT *
       FROM MEASUREMENT_DATA1
      UNION ALL
     SELECT *
       FROM MEASUREMENT_DATA2
*/     )
   , MEASUREMENT_DKA_BASE_DATA AS ( -- INDEX_DATE 기준 3개월 이내 발생한 검사결과들로 비교 (20190207, KS)
     SELECT A1.*
       FROM CDM_2018_VIEW.MEASUREMENT A1
          , COHORT_DATA B1
      WHERE A1.PERSON_ID = B1.PERSON_ID
        AND A1.MEASUREMENT_DATE BETWEEN B1.COHORT_START_DATE - 90 AND B1.COHORT_START_DATE
     )
   , MEASUREMENT_DKA_DATA AS ( /* DKA여부가 'Y'인 대상만 존재 */
     SELECT D1.PERSON_ID
          , 1 AS DKA_YN
       FROM COHORT_DATA D1
          , (SELECT DISTINCT PERSON_ID
               FROM MEASUREMENT_DKA_BASE_DATA
              WHERE (MEASUREMENT_CONCEPT_ID IN ('3019977', '3012544')            AND VALUE_AS_NUMBER < 7.3) /* pH < 7.3 */
                 OR (MEASUREMENT_CONCEPT_ID IN ('3008152', '3027273', '3015235') AND VALUE_AS_NUMBER < 15)  /* HCO3- < 15 */
            ) D2
          , (SELECT DISTINCT PERSON_ID
               FROM MEASUREMENT_DKA_BASE_DATA
              WHERE (MEASUREMENT_CONCEPT_ID IN ('3028893')  AND VALUE_AS_CONCEPT_ID IN (4126673,4125547,4126674)) /* urinalysis 에서 ketone 양성 */
                 OR (MEASUREMENT_CONCEPT_ID IN ('3003985')  AND VALUE_AS_NUMBER >= 180)                           /* 혈액 검사에서 ketone 양성(Beta hydroxybutyric acid) */
                 OR (MEASUREMENT_CONCEPT_ID IN ('40769111') AND VALUE_AS_NUMBER >= 3)                             /* 혈액 검사에서 ketone 양성(Ketone (Beta hydroxybutyate)) */
                 -- 20190208 회의에서 아래 결과는 제외해서 분석하기로 논의
                 --OR (MEASUREMENT_CONCEPT_ID IN ('3035132')  AND REGEXP_LIKE(VALUE_SOURCE_VALUE, '[1-9]\+')) /* 혈액 검사에서 ketone 양성(Ketone bodies (em)) */
            ) D3
      WHERE D1.PERSON_ID = D2.PERSON_ID
        AND D2.PERSON_ID = D3.PERSON_ID
     )
   , MEASUREMENT_DKA_DATA_NEW AS ( /* 2019-04-07 : (COHORT_START_DATE - 30 DAYS) ~ (COHORT_START_DATE + 7 DAYS) 기간 중 COHORT_START_DATE에 가장 가까운 검사결과 값 사용 */
     SELECT PERSON_ID
          , MAX(CASE WHEN  MEASUREMENT_CONCEPT_ID IN (3019977, 3012544)          AND VALUE_AS_NUMBER < 7.3 THEN 'Y' END) AS DKA_TEST1
          , MAX(CASE WHEN  MEASUREMENT_CONCEPT_ID IN (3008152, 3027273, 3015235) AND VALUE_AS_NUMBER < 15  THEN 'Y' END) AS DKA_TEST2
          , MAX(CASE WHEN  MEASUREMENT_CONCEPT_ID IN (3028893) AND VALUE_AS_CONCEPT_ID IN (4126673, 4125547, 4126674) THEN 'Y' END) AS DKA_TEST3
          , MAX(CASE WHEN (MEASUREMENT_CONCEPT_ID IN (3003985) AND VALUE_AS_NUMBER >= 180) OR (MEASUREMENT_CONCEPT_ID IN (40769111) AND VALUE_AS_NUMBER >= 3) THEN 'Y' END) AS DKA_TEST4
       FROM (SELECT E2.PERSON_ID, E2.MEASUREMENT_CONCEPT_ID, E2.VALUE_AS_NUMBER, E2.VALUE_AS_CONCEPT_ID, E2.MEASUREMENT_DATE, E1.COHORT_START_DATE
                  , ROW_NUMBER() OVER (PARTITION BY E2.PERSON_ID, E2.MEASUREMENT_CONCEPT_ID ORDER BY ABS(E1.COHORT_START_DATE - E2.MEASUREMENT_DATE)) AS RN
               FROM COHORT_DATA E1
                  , CDM_2018_VIEW.MEASUREMENT E2
              WHERE E1.PERSON_ID = E2.PERSON_ID
                AND E2.MEASUREMENT_DATE BETWEEN E1.COHORT_START_DATE - 30 AND E1.COHORT_START_DATE + 7
                AND E2.MEASUREMENT_CONCEPT_ID IN (3019977, 3012544, 3008152, 3027273, 3015235, 3028893, 3003985, 40769111)
            )
      WHERE RN = 1
      GROUP BY PERSON_ID
     )
   , NORMAL_RANGE AS ( /* 해당 환자의 키/몸무게 데이터 추출 시 이상치 제거용 */
     SELECT T1.PERSON_ID
          , ROUND(NVL(T1.HEIGHT_00M_MED,0) * Z1.HEIGHT_FR_RT, 2) AS HEIGHT_FR
          , ROUND(NVL(COALESCE(T1.HEIGHT_60M_MED, T1.HEIGHT_48M_MED, T1.HEIGHT_36M_MED, T1.HEIGHT_24M_MED, T1.HEIGHT_12M_MED, T1.HEIGHT_06M_MED, T1.HEIGHT_03M_MED, T1.HEIGHT_00M_MED),0) * Z1.HEIGHT_TO_RT, 2) AS HEIGHT_TO
          , ROUND(NVL(T1.WEIGHT_00M_MED,0) * Z1.WEIGHT_FR_RT, 2) AS WEIGHT_FR
          , ROUND(NVL(COALESCE(T1.WEIGHT_60M_MED, T1.WEIGHT_48M_MED, T1.WEIGHT_36M_MED, T1.WEIGHT_24M_MED, T1.WEIGHT_12M_MED, T1.WEIGHT_06M_MED, T1.WEIGHT_03M_MED, T1.WEIGHT_00M_MED),0) * Z1.WEIGHT_TO_RT, 2) AS WEIGHT_TO
       FROM (SELECT S1.PERSON_ID
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_00M_BF AND S1.COHORT_START_DATE_00M_AF THEN S2.VALUE_AS_NUMBER END) AS HEIGHT_00M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_03M_BF AND S1.COHORT_START_DATE_03M_AF THEN S2.VALUE_AS_NUMBER END) AS HEIGHT_03M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_06M_BF AND S1.COHORT_START_DATE_06M_AF THEN S2.VALUE_AS_NUMBER END) AS HEIGHT_06M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_12M_BF AND S1.COHORT_START_DATE_12M_AF THEN S2.VALUE_AS_NUMBER END) AS HEIGHT_12M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_24M_BF AND S1.COHORT_START_DATE_24M_AF THEN S2.VALUE_AS_NUMBER END) AS HEIGHT_24M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_36M_BF AND S1.COHORT_START_DATE_36M_AF THEN S2.VALUE_AS_NUMBER END) AS HEIGHT_36M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_48M_BF AND S1.COHORT_START_DATE_48M_AF THEN S2.VALUE_AS_NUMBER END) AS HEIGHT_48M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_60M_BF AND S1.COHORT_START_DATE_60M_AF THEN S2.VALUE_AS_NUMBER END) AS HEIGHT_60M_MED

                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_00M_BF AND S1.COHORT_START_DATE_00M_AF THEN S2.VALUE_AS_NUMBER END) AS WEIGHT_00M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_03M_BF AND S1.COHORT_START_DATE_03M_AF THEN S2.VALUE_AS_NUMBER END) AS WEIGHT_03M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_06M_BF AND S1.COHORT_START_DATE_06M_AF THEN S2.VALUE_AS_NUMBER END) AS WEIGHT_06M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_12M_BF AND S1.COHORT_START_DATE_12M_AF THEN S2.VALUE_AS_NUMBER END) AS WEIGHT_12M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_24M_BF AND S1.COHORT_START_DATE_24M_AF THEN S2.VALUE_AS_NUMBER END) AS WEIGHT_24M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_36M_BF AND S1.COHORT_START_DATE_36M_AF THEN S2.VALUE_AS_NUMBER END) AS WEIGHT_36M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_48M_BF AND S1.COHORT_START_DATE_48M_AF THEN S2.VALUE_AS_NUMBER END) AS WEIGHT_48M_MED
                  , MEDIAN(CASE WHEN S2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND S2.MEASUREMENT_DATE BETWEEN S1.COHORT_START_DATE_60M_BF AND S1.COHORT_START_DATE_60M_AF THEN S2.VALUE_AS_NUMBER END) AS WEIGHT_60M_MED
               FROM COHORT_DATA S1
                  , MEASUREMENT_DATA S2
                  , IN_PARAM Z1
              WHERE S1.PERSON_ID = S2.PERSON_ID(+)
              GROUP BY S1.PERSON_ID
            ) T1
          , IN_PARAM Z1
     )
   , PRCS_DATA AS (
     SELECT T1.PERSON_ID
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN DECODE(SIGN(T1.COHORT_START_DATE_00M-T2.MEASUREMENT_DATE), -1, 1, 0) || LPAD(ABS(T1.COHORT_START_DATE_00M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 5)) AS HEIGHT_00M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_00M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_00M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_00M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_00M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_03M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HEIGHT_03M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_03M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_03M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_03M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_03M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_06M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HEIGHT_06M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_06M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_06M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_06M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_06M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_12M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HEIGHT_12M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_12M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_12M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_12M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_12M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_24M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HEIGHT_24M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_24M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_24M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_24M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_24M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_36M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HEIGHT_36M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_36M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_36M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_36M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_36M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_48M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HEIGHT_48M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_48M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_48M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_48M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_48M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_60M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HEIGHT_60M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_60M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_60M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_60M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_60M_MED

          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN DECODE(SIGN(T1.COHORT_START_DATE_00M-T2.MEASUREMENT_DATE), -1, 1, 0) || LPAD(ABS(T1.COHORT_START_DATE_00M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 5)) AS WEIGHT_00M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_00M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_00M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_00M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_00M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_03M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS WEIGHT_03M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_03M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_03M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_03M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_03M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_06M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS WEIGHT_06M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_06M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_06M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_06M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_06M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_12M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS WEIGHT_12M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_12M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_12M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_12M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_12M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_24M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS WEIGHT_24M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_24M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_24M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_24M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_24M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_36M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS WEIGHT_36M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_36M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_36M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_36M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_36M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_48M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS WEIGHT_48M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_48M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_48M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_48M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_48M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_60M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS WEIGHT_60M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_60M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_60M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_60M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_60M_MED

          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN DECODE(SIGN(T1.COHORT_START_DATE_00M-T2.MEASUREMENT_DATE), -1, 1, 0) || LPAD(ABS(T1.COHORT_START_DATE_00M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 5)) AS BMI_00M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_00M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_00M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_00M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_00M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_03M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS BMI_03M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_03M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_03M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_03M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_03M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_06M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS BMI_06M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_06M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_06M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_06M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_06M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_12M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS BMI_12M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_12M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_12M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_12M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_12M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_24M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS BMI_24M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_24M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_24M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_24M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_24M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_36M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS BMI_36M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_36M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_36M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_36M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_36M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_48M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS BMI_48M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_48M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_48M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_48M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_48M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_60M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS BMI_60M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_60M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_60M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_60M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_60M_MED

          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN DECODE(SIGN(T1.COHORT_START_DATE_00M-T2.MEASUREMENT_DATE), -1, 1, 0) || LPAD(ABS(T1.COHORT_START_DATE_00M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 5)) AS HBA1C_00M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_00M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_00M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_00M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_00M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_03M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HBA1C_03M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_03M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_03M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_03M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_03M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_06M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HBA1C_06M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_06M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_06M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_06M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_06M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_12M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HBA1C_12M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_12M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_12M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_12M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_12M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_24M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HBA1C_24M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_24M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_24M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_24M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_24M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_36M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HBA1C_36M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_36M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_36M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_36M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_36M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_48M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HBA1C_48M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_48M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_48M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_48M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_48M_MED
          , TO_NUMBER(SUBSTR(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN LPAD(ABS(T1.COHORT_START_DATE_60M-T2.MEASUREMENT_DATE), 3, '0') || T2.VALUE_AS_NUMBER END), 4)) AS HBA1C_60M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_60M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_60M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_60M_AVG
          ,    MEDIAN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_60M_MED
       FROM COHORT_DATA T1
          , (SELECT K1.PERSON_ID, K1.MEASUREMENT_CONCEPT_ID, K1.MEASUREMENT_DATE, K1.VALUE_AS_NUMBER
               FROM MEASUREMENT_DATA K1
                  , NORMAL_RANGE K2 /* 해당 환자의 키/몸무게 데이터 추출 시 이상치 제거 */
                  , IN_PARAM Z1
              WHERE K1.PERSON_ID = K2.PERSON_ID
                AND ((K1.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND K1.VALUE_AS_NUMBER BETWEEN K2.HEIGHT_FR AND K2.HEIGHT_TO)
                  OR (K1.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND K1.VALUE_AS_NUMBER BETWEEN K2.WEIGHT_FR AND K2.WEIGHT_TO)
                  OR (K1.MEASUREMENT_CONCEPT_ID IN (Z1.CONCEPT_ID_BMI, Z1.CONCEPT_ID_HBA1C, Z1.CONCEPT_ID_GADAB))
                    )
            ) T2
          , IN_PARAM Z1
      WHERE T1.PERSON_ID = T2.PERSON_ID(+)
--        AND EXISTS (SELECT 1 /* 신환환자 한정 : 0개월 근처(진단시점 INDEX_DATE ~ +3개월 이내) GAD Ab 검사가 최소 1번 있는 경우 */
--                      FROM MEASUREMENT_DATA S1
--                     WHERE S1.PERSON_ID = T1.PERSON_ID
--                       AND S1.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_GADAB
--                       AND S1.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE AND T1.COHORT_START_DATE_03M
--                   )
      GROUP BY T1.PERSON_ID
     )
--SELECT COUNT(*), COUNT(DISTINCT PERSON_ID) FROM (
SELECT M1.COHORT_ID, M1.PERSON_ID||'' AS PERSON_ID, M1.GENDER_CONCEPT_ID, M1.YEAR_OF_BIRTH, M1.MONTH_OF_BIRTH /*, M1.DAY_OF_BIRTH */
     --, M1.COHORT_START_DATE, M1.COHORT_END_DATE
     , TO_CHAR(M1.COHORT_START_DATE, 'YYYY-MM-DD') AS COHORT_START_DATE, TO_CHAR(M1.COHORT_END_DATE, 'YYYY-MM-DD') AS COHORT_END_DATE
     , NVL(M2.DKA_YN, 0) AS DKA_YN_DX -- DKA여부(진단기준)
     , NVL(M4.DKA_YN, 0) AS DKA_YN    -- DKA여부(검사기준)
     , NVL(M5.DKA_YN, 0) AS DKA_YN_DX_NEW -- DKA여부(진단기준)
     , CASE WHEN (M6.DKA_TEST1 = 'Y' OR M6.DKA_TEST2 = 'Y') AND (M6.DKA_TEST3 = 'Y' OR M6.DKA_TEST4 = 'Y') THEN 1 ELSE 0 END AS DKA_YN_TEST_NEW /* DKA여부(검사기준) */
     , CASE WHEN M5.DKA_YN = 1 OR ((M6.DKA_TEST1 = 'Y' OR M6.DKA_TEST2 = 'Y') AND (M6.DKA_TEST3 = 'Y' OR M6.DKA_TEST4 = 'Y')) THEN 1 ELSE 0 END AS DKA_YN_NEW /* DKA여부 (2019-04-07 : 진단 Y or 검사 Y 이면 DKA로 정의) */
     , NVL(M2.HHS_YN, 0) AS HHS_YN
     , NVL(CASE WHEN (M7.DM1 = 0 AND M7.DM2 = 0) OR (M7.DM1 = 1 AND M7.DM2 = 1) THEN 0 /* 1형과 2형 당뇨병이 모두 없거나, 모두 있으면 0 */
                WHEN  M7.DM1 = 1 AND M7.DM2 = 0 THEN 1 /* 1형 당뇨병만 존재할 경우 1 */
                WHEN  M7.DM1 = 0 AND M7.DM2 = 1 THEN 2 /* 2형 당뇨병만 존재할 경우 2 */
           END, 0) AS DM

     , M3.HEIGHT_00M, M3.HEIGHT_00M_MIN, M3.HEIGHT_00M_MAX, M3.HEIGHT_00M_AVG, M3.HEIGHT_00M_MED
     , M3.HEIGHT_03M, M3.HEIGHT_03M_MIN, M3.HEIGHT_03M_MAX, M3.HEIGHT_03M_AVG, M3.HEIGHT_03M_MED
     , M3.HEIGHT_06M, M3.HEIGHT_06M_MIN, M3.HEIGHT_06M_MAX, M3.HEIGHT_06M_AVG, M3.HEIGHT_06M_MED
     , M3.HEIGHT_12M, M3.HEIGHT_12M_MIN, M3.HEIGHT_12M_MAX, M3.HEIGHT_12M_AVG, M3.HEIGHT_12M_MED
     , M3.HEIGHT_24M, M3.HEIGHT_24M_MIN, M3.HEIGHT_24M_MAX, M3.HEIGHT_24M_AVG, M3.HEIGHT_24M_MED
     , M3.HEIGHT_36M, M3.HEIGHT_36M_MIN, M3.HEIGHT_36M_MAX, M3.HEIGHT_36M_AVG, M3.HEIGHT_36M_MED
     , M3.HEIGHT_48M, M3.HEIGHT_48M_MIN, M3.HEIGHT_48M_MAX, M3.HEIGHT_48M_AVG, M3.HEIGHT_48M_MED
     , M3.HEIGHT_60M, M3.HEIGHT_60M_MIN, M3.HEIGHT_60M_MAX, M3.HEIGHT_60M_AVG, M3.HEIGHT_60M_MED

     , M3.WEIGHT_00M, M3.WEIGHT_00M_MIN, M3.WEIGHT_00M_MAX, M3.WEIGHT_00M_AVG, M3.WEIGHT_00M_MED
     , M3.WEIGHT_03M, M3.WEIGHT_03M_MIN, M3.WEIGHT_03M_MAX, M3.WEIGHT_03M_AVG, M3.WEIGHT_03M_MED
     , M3.WEIGHT_06M, M3.WEIGHT_06M_MIN, M3.WEIGHT_06M_MAX, M3.WEIGHT_06M_AVG, M3.WEIGHT_06M_MED
     , M3.WEIGHT_12M, M3.WEIGHT_12M_MIN, M3.WEIGHT_12M_MAX, M3.WEIGHT_12M_AVG, M3.WEIGHT_12M_MED
     , M3.WEIGHT_24M, M3.WEIGHT_24M_MIN, M3.WEIGHT_24M_MAX, M3.WEIGHT_24M_AVG, M3.WEIGHT_24M_MED
     , M3.WEIGHT_36M, M3.WEIGHT_36M_MIN, M3.WEIGHT_36M_MAX, M3.WEIGHT_36M_AVG, M3.WEIGHT_36M_MED
     , M3.WEIGHT_48M, M3.WEIGHT_48M_MIN, M3.WEIGHT_48M_MAX, M3.WEIGHT_48M_AVG, M3.WEIGHT_48M_MED
     , M3.WEIGHT_60M, M3.WEIGHT_60M_MIN, M3.WEIGHT_60M_MAX, M3.WEIGHT_60M_AVG, M3.WEIGHT_60M_MED

     , M3.BMI_00M, M3.BMI_00M_MIN, M3.BMI_00M_MAX, M3.BMI_00M_AVG, M3.BMI_00M_MED
     , M3.BMI_03M, M3.BMI_03M_MIN, M3.BMI_03M_MAX, M3.BMI_03M_AVG, M3.BMI_03M_MED
     , M3.BMI_06M, M3.BMI_06M_MIN, M3.BMI_06M_MAX, M3.BMI_06M_AVG, M3.BMI_06M_MED
     , M3.BMI_12M, M3.BMI_12M_MIN, M3.BMI_12M_MAX, M3.BMI_12M_AVG, M3.BMI_12M_MED
     , M3.BMI_24M, M3.BMI_24M_MIN, M3.BMI_24M_MAX, M3.BMI_24M_AVG, M3.BMI_24M_MED
     , M3.BMI_36M, M3.BMI_36M_MIN, M3.BMI_36M_MAX, M3.BMI_36M_AVG, M3.BMI_36M_MED
     , M3.BMI_48M, M3.BMI_48M_MIN, M3.BMI_48M_MAX, M3.BMI_48M_AVG, M3.BMI_48M_MED
     , M3.BMI_60M, M3.BMI_60M_MIN, M3.BMI_60M_MAX, M3.BMI_60M_AVG, M3.BMI_60M_MED

     , M3.HBA1C_00M, M3.HBA1C_00M_MIN, M3.HBA1C_00M_MAX, M3.HBA1C_00M_AVG, M3.HBA1C_00M_MED
     , M3.HBA1C_03M, M3.HBA1C_03M_MIN, M3.HBA1C_03M_MAX, M3.HBA1C_03M_AVG, M3.HBA1C_03M_MED
     , M3.HBA1C_06M, M3.HBA1C_06M_MIN, M3.HBA1C_06M_MAX, M3.HBA1C_06M_AVG, M3.HBA1C_06M_MED
     , M3.HBA1C_12M, M3.HBA1C_12M_MIN, M3.HBA1C_12M_MAX, M3.HBA1C_12M_AVG, M3.HBA1C_12M_MED
     , M3.HBA1C_24M, M3.HBA1C_24M_MIN, M3.HBA1C_24M_MAX, M3.HBA1C_24M_AVG, M3.HBA1C_24M_MED
     , M3.HBA1C_36M, M3.HBA1C_36M_MIN, M3.HBA1C_36M_MAX, M3.HBA1C_36M_AVG, M3.HBA1C_36M_MED
     , M3.HBA1C_48M, M3.HBA1C_48M_MIN, M3.HBA1C_48M_MAX, M3.HBA1C_48M_AVG, M3.HBA1C_48M_MED
     , M3.HBA1C_60M, M3.HBA1C_60M_MIN, M3.HBA1C_60M_MAX, M3.HBA1C_60M_AVG, M3.HBA1C_60M_MED
  FROM COHORT_DATA M1
     , CONDITION_DATA M2
     , PRCS_DATA M3
     , MEASUREMENT_DKA_DATA M4
     , CONDITION_DATA_NEW M5
     , MEASUREMENT_DKA_DATA_NEW M6
     , CONDITION_DATA_DM M7
 WHERE M1.PERSON_ID = M2.PERSON_ID(+)
   AND M1.PERSON_ID = M3.PERSON_ID
   AND M1.PERSON_ID = M4.PERSON_ID(+)
   AND M1.PERSON_ID = M5.PERSON_ID(+)
   AND M1.PERSON_ID = M6.PERSON_ID(+)
   AND M1.PERSON_ID = M7.PERSON_ID(+)
--   AND NVL(M3.HBA1C_00M,0)     >  NVL(M3.HBA1C_03M,0)  /* 신환환자 한정 : 0, 3개월 사이의 HbA1c가 1이상 감소한 경우 */
--   AND NVL(M3.WEIGHT_00M,0)    <  NVL(M3.WEIGHT_03M,0) /* 신환환자 한정 : 0, 3개월 사이의 Weight가 증가한 경우 */
--)
;
