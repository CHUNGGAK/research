/* 9. 메인쿼리 수행 */
WITH IN_PARAM AS (
     SELECT 4177340 AS CONCEPT_ID_HEIGHT /* 4177340(Height) */
          , 4099154 AS CONCEPT_ID_WEIGHT /* 4099154(Weight) */
          , 4245997 AS CONCEPT_ID_BMI    /* 4245997(BMI(EMR)) */
          , 3005673 AS CONCEPT_ID_HBA1C  /* 3005673(HbA1c) */
          , 3020148 AS CONCEPT_ID_GADAB  /* 3020148(GAD Ab 검사) */
--          , '99999' AS MEASUREMENT_SOURCE1 /* Height and Weight and BMI - '1':MEASUREMENT, '2':OBSERVATION */
--          , '99999' AS MEASUREMENT_SOURCE2 /* HbA1c and GAD Ab          - '1':MEASUREMENT, '2':OBSERVATION */
          , 99999 AS COHORT_ID
          , 0.97 AS HEIGHT_FR_RT /* HEIGHT 최저 가중치 */
          , 1.03 AS HEIGHT_TO_RT /* HEIGHT 최고 가중치 */
          , 0.8  AS WEIGHT_FR_RT /* WEIGHT 최저 가중치 */
          , 1.2  AS WEIGHT_TO_RT /* WEIGHT 최고 가중치 */
     )
   , COHORT_DATA AS (
     SELECT Z1.COHORT_ID
          , A1.SUBJECT_ID AS PERSON_ID
          , A1.COHORT_START_DATE
          , DATEADD(DAY, -45, A1.COHORT_START_DATE) AS COHORT_START_DATE_00M_BF
          , DATEADD(DAY,  -1, A1.COHORT_START_DATE) AS COHORT_START_DATE_00M
          , DATEADD(DAY,  45, A1.COHORT_START_DATE) AS COHORT_START_DATE_00M_AF
          , DATEADD(DAY,  46, A1.COHORT_START_DATE) AS COHORT_START_DATE_03M_BF
          , DATEADD(month, 3, A1.COHORT_START_DATE) AS COHORT_START_DATE_03M
          , DATEADD(DAY, 135, A1.COHORT_START_DATE) AS COHORT_START_DATE_03M_AF
          , DATEADD(DAY, 136, A1.COHORT_START_DATE) AS COHORT_START_DATE_06M_BF
          , DATEADD(month, 6, A1.COHORT_START_DATE) AS COHORT_START_DATE_06M
          , DATEADD(DAY, 227, A1.COHORT_START_DATE) AS COHORT_START_DATE_06M_AF
          , DATEADD(month, 9, A1.COHORT_START_DATE) AS COHORT_START_DATE_12M_BF
          , DATEADD(month,12, A1.COHORT_START_DATE) AS COHORT_START_DATE_12M
          , DATEADD(month,15, A1.COHORT_START_DATE) AS COHORT_START_DATE_12M_AF
          , DATEADD(month,21, A1.COHORT_START_DATE) AS COHORT_START_DATE_24M_BF
          , DATEADD(month,24, A1.COHORT_START_DATE) AS COHORT_START_DATE_24M
          , DATEADD(month,27, A1.COHORT_START_DATE) AS COHORT_START_DATE_24M_AF
          , DATEADD(month,33, A1.COHORT_START_DATE) AS COHORT_START_DATE_36M_BF
          , DATEADD(month,36, A1.COHORT_START_DATE) AS COHORT_START_DATE_36M
          , DATEADD(month,39, A1.COHORT_START_DATE) AS COHORT_START_DATE_36M_AF
          , DATEADD(month,45, A1.COHORT_START_DATE) AS COHORT_START_DATE_48M_BF
          , DATEADD(month,48, A1.COHORT_START_DATE) AS COHORT_START_DATE_48M
          , DATEADD(month,51, A1.COHORT_START_DATE) AS COHORT_START_DATE_48M_AF
          , DATEADD(month,57, A1.COHORT_START_DATE) AS COHORT_START_DATE_60M_BF
          , DATEADD(month,60, A1.COHORT_START_DATE) AS COHORT_START_DATE_60M
          , DATEADD(month,63, A1.COHORT_START_DATE) AS COHORT_START_DATE_60M_AF
          , A1.COHORT_END_DATE
          , A2.GENDER_CONCEPT_ID
          , A2.YEAR_OF_BIRTH
          , A2.MONTH_OF_BIRTH
          , A2.DAY_OF_BIRTH
       FROM @RESULT_DB_SCHEMA.COHORT A1
          , @CDM_DB_SCHEMA.PERSON A2
          , IN_PARAM Z1
      WHERE A1.SUBJECT_ID = A2.PERSON_ID
        AND A1.COHORT_DEFINITION_ID = Z1.COHORT_ID
     )

     -- 임시테이블 CONDITION_DATA 생성
     -- 임시테이블 CONDITION_DATA_NEW 생성
     -- 임시테이블 CONDITION_DATA_DM 생성
     -- 임시테이블 MEASUREMENT_DATA 로 대체
     -- 임시테이블 MEASUREMENT_DKA_DATA 로 대체
     -- 임시테이블 MEASUREMENT_DKA_DATA_NEW 로 대체
     -- 임시테이블 NORMAL_RANGE 생성
     -- 임시테이블 NORMAL_MEASUREMENT 생성

   , PRCS_DATA1 AS ( /* 중앙값(MEDIAN) 데이터 */
     SELECT DISTINCT T1.PERSON_ID
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HEIGHT_00M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HEIGHT_03M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HEIGHT_06M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HEIGHT_12M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HEIGHT_24M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HEIGHT_36M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HEIGHT_48M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HEIGHT_60M_MED

          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS WEIGHT_00M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS WEIGHT_03M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS WEIGHT_06M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS WEIGHT_12M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS WEIGHT_24M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS WEIGHT_36M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS WEIGHT_48M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS WEIGHT_60M_MED

          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS BMI_00M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS BMI_03M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS BMI_06M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS BMI_12M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS BMI_24M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS BMI_36M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS BMI_48M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS BMI_60M_MED

          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HBA1C_00M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HBA1C_03M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HBA1C_06M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HBA1C_12M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HBA1C_24M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HBA1C_36M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HBA1C_48M_MED
          , PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END)) OVER(PARTITION BY T1.PERSON_ID) AS HBA1C_60M_MED
       FROM COHORT_DATA T1
          , @CDM_DB_SCHEMA.NORMAL_MEASUREMENT T2
          , IN_PARAM Z1
      WHERE T1.PERSON_ID = T2.PERSON_ID
--        AND EXISTS (SELECT 1 /* 신환환자 한정 : 0개월 근처(진단시점 INDEX_DATE ~ +3개월 이내) GAD Ab 검사가 최소 1번 있는 경우 */
--                      FROM MEASUREMENT_DATA S1
--                     WHERE S1.PERSON_ID = T1.PERSON_ID
--                       AND S1.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_GADAB
--                       AND S1.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE AND T1.COHORT_START_DATE_03M
--                   )
     )
   , PRCS_DATA2 AS ( /* 중앙값(MEDIAN) 외 데이터 */
     SELECT T1.PERSON_ID
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN CONCAT((CASE WHEN SIGN(DATEDIFF(day, T1.COHORT_START_DATE_00M, T2.MEASUREMENT_DATE)) = -1 THEN 1 ELSE 0 END), RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_00M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 5, 100)) AS HEIGHT_00M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_00M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_00M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_00M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_03M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HEIGHT_03M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_03M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_03M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_03M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_06M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HEIGHT_06M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_06M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_06M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_06M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_12M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HEIGHT_12M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_12M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_12M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_12M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_24M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HEIGHT_24M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_24M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_24M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_24M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_36M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HEIGHT_36M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_36M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_36M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_36M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_48M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HEIGHT_48M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_48M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_48M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_48M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_60M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HEIGHT_60M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_60M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS HEIGHT_60M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HEIGHT_60M_AVG

          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN CONCAT((CASE WHEN SIGN(DATEDIFF(day, T1.COHORT_START_DATE_00M, T2.MEASUREMENT_DATE)) = -1 THEN 1 ELSE 0 END), RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_00M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 5, 100)) AS WEIGHT_00M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_00M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_00M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_00M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_03M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS WEIGHT_03M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_03M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_03M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_03M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_06M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS WEIGHT_06M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_06M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_06M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_06M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_12M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS WEIGHT_12M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_12M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_12M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_12M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_24M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS WEIGHT_24M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_24M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_24M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_24M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_36M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS WEIGHT_36M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_36M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_36M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_36M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_48M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS WEIGHT_48M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_48M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_48M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_48M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_60M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS WEIGHT_60M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_60M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS WEIGHT_60M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_WEIGHT AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS WEIGHT_60M_AVG

          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN CONCAT((CASE WHEN SIGN(DATEDIFF(day, T1.COHORT_START_DATE_00M, T2.MEASUREMENT_DATE)) = -1 THEN 1 ELSE 0 END), RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_00M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 5, 100)) AS BMI_00M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_00M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_00M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_00M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_03M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS BMI_03M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_03M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_03M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_03M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_06M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS BMI_06M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_06M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_06M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_06M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_12M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS BMI_12M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_12M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_12M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_12M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_24M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS BMI_24M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_24M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_24M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_24M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_36M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS BMI_36M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_36M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_36M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_36M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_48M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS BMI_48M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_48M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_48M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_48M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_60M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS BMI_60M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_60M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS BMI_60M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_BMI AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS BMI_60M_AVG

          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN CONCAT((CASE WHEN SIGN(DATEDIFF(day, T1.COHORT_START_DATE_00M, T2.MEASUREMENT_DATE)) = -1 THEN 1 ELSE 0 END), RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_00M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 5, 100)) AS HBA1C_00M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_00M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_00M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_00M_BF AND T1.COHORT_START_DATE_00M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_00M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_03M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HBA1C_03M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_03M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_03M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_03M_BF AND T1.COHORT_START_DATE_03M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_03M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_06M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HBA1C_06M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_06M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_06M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_06M_BF AND T1.COHORT_START_DATE_06M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_06M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_12M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HBA1C_12M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_12M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_12M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_12M_BF AND T1.COHORT_START_DATE_12M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_12M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_24M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HBA1C_24M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_24M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_24M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_24M_BF AND T1.COHORT_START_DATE_24M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_24M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_36M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HBA1C_36M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_36M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_36M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_36M_BF AND T1.COHORT_START_DATE_36M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_36M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_48M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HBA1C_48M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_48M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_48M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_48M_BF AND T1.COHORT_START_DATE_48M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_48M_AVG
          , CONVERT(numeric, SUBSTRING(MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN CONCAT(RIGHT(CONCAT('000', ABS(DATEDIFF(day, T1.COHORT_START_DATE_60M, T2.MEASUREMENT_DATE))), 3), T2.VALUE_AS_NUMBER) END), 4, 100)) AS HBA1C_60M
          ,       MIN(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_60M_MIN
          ,       MAX(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END) AS HBA1C_60M_MAX
          , ROUND(AVG(CASE WHEN T2.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_HBA1C AND T2.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE_60M_BF AND T1.COHORT_START_DATE_60M_AF THEN T2.VALUE_AS_NUMBER END), 2) AS HBA1C_60M_AVG
       FROM COHORT_DATA T1
          , @CDM_DB_SCHEMA.NORMAL_MEASUREMENT T2
          , IN_PARAM Z1
      WHERE T1.PERSON_ID = T2.PERSON_ID
--        AND EXISTS (SELECT 1 /* 신환환자 한정 : 0개월 근처(진단시점 INDEX_DATE ~ +3개월 이내) GAD Ab 검사가 최소 1번 있는 경우 */
--                      FROM MEASUREMENT_DATA S1
--                     WHERE S1.PERSON_ID = T1.PERSON_ID
--                       AND S1.MEASUREMENT_CONCEPT_ID = Z1.CONCEPT_ID_GADAB
--                       AND S1.MEASUREMENT_DATE BETWEEN T1.COHORT_START_DATE AND T1.COHORT_START_DATE_03M
--                   )
      GROUP BY T1.PERSON_ID
     )
--SELECT COUNT(*), COUNT(DISTINCT PERSON_ID) FROM (
SELECT M1.COHORT_ID, M1.PERSON_ID, M1.GENDER_CONCEPT_ID, M1.YEAR_OF_BIRTH, M1.MONTH_OF_BIRTH /*, M1.DAY_OF_BIRTH */
     --, M1.COHORT_START_DATE, M1.COHORT_END_DATE
     , CONVERT(VARCHAR(16), M1.COHORT_START_DATE, 120) AS COHORT_START_DATE, CONVERT(VARCHAR(16), M1.COHORT_END_DATE, 120) AS COHORT_END_DATE
     , ISNULL(M2.DKA_YN, 0) AS DKA_YN_DX -- DKA여부(진단기준)
     , ISNULL(M4.DKA_YN, 0) AS DKA_YN    -- DKA여부(검사기준)
     , ISNULL(M7.DKA_YN, 0) AS DKA_YN_DX_NEW -- DKA여부(진단기준)
     , CASE WHEN (M8.DKA_TEST1 = 'Y' OR M8.DKA_TEST2 = 'Y') AND (M8.DKA_TEST3 = 'Y' OR M8.DKA_TEST4 = 'Y') THEN 1 ELSE 0 END AS DKA_YN_TEST_NEW /* DKA여부(검사기준) */
     , CASE WHEN M7.DKA_YN = 1 OR ((M8.DKA_TEST1 = 'Y' OR M8.DKA_TEST2 = 'Y') AND (M8.DKA_TEST3 = 'Y' OR M8.DKA_TEST4 = 'Y')) THEN 1 ELSE 0 END AS DKA_YN_NEW /* DKA여부 (2019-04-07 : 진단 Y or 검사 Y 이면 DKA로 정의) */
     , ISNULL(M2.HHS_YN, 0) AS HHS_YN
     , CASE WHEN M3.DM1 = 1 AND M3.DM2 = 0 THEN 1 /* 1형 당뇨병만 존재할 경우 1 */
            WHEN M3.DM2 = 1 AND M3.DM1 = 0 THEN 2 /* 2형 당뇨병만 존재할 경우 2 */
            ELSE 0 /* 1형과 2형 당뇨병이 모두 없거나, 모두 있으면 0 */
       END AS DM

     , M6.HEIGHT_00M, M6.HEIGHT_00M_MIN, M6.HEIGHT_00M_MAX, M6.HEIGHT_00M_AVG, M5.HEIGHT_00M_MED
     , M6.HEIGHT_03M, M6.HEIGHT_03M_MIN, M6.HEIGHT_03M_MAX, M6.HEIGHT_03M_AVG, M5.HEIGHT_03M_MED
     , M6.HEIGHT_06M, M6.HEIGHT_06M_MIN, M6.HEIGHT_06M_MAX, M6.HEIGHT_06M_AVG, M5.HEIGHT_06M_MED
     , M6.HEIGHT_12M, M6.HEIGHT_12M_MIN, M6.HEIGHT_12M_MAX, M6.HEIGHT_12M_AVG, M5.HEIGHT_12M_MED
     , M6.HEIGHT_24M, M6.HEIGHT_24M_MIN, M6.HEIGHT_24M_MAX, M6.HEIGHT_24M_AVG, M5.HEIGHT_24M_MED
     , M6.HEIGHT_36M, M6.HEIGHT_36M_MIN, M6.HEIGHT_36M_MAX, M6.HEIGHT_36M_AVG, M5.HEIGHT_36M_MED
     , M6.HEIGHT_48M, M6.HEIGHT_48M_MIN, M6.HEIGHT_48M_MAX, M6.HEIGHT_48M_AVG, M5.HEIGHT_48M_MED
     , M6.HEIGHT_60M, M6.HEIGHT_60M_MIN, M6.HEIGHT_60M_MAX, M6.HEIGHT_60M_AVG, M5.HEIGHT_60M_MED

     , M6.WEIGHT_00M, M6.WEIGHT_00M_MIN, M6.WEIGHT_00M_MAX, M6.WEIGHT_00M_AVG, M5.WEIGHT_00M_MED
     , M6.WEIGHT_03M, M6.WEIGHT_03M_MIN, M6.WEIGHT_03M_MAX, M6.WEIGHT_03M_AVG, M5.WEIGHT_03M_MED
     , M6.WEIGHT_06M, M6.WEIGHT_06M_MIN, M6.WEIGHT_06M_MAX, M6.WEIGHT_06M_AVG, M5.WEIGHT_06M_MED
     , M6.WEIGHT_12M, M6.WEIGHT_12M_MIN, M6.WEIGHT_12M_MAX, M6.WEIGHT_12M_AVG, M5.WEIGHT_12M_MED
     , M6.WEIGHT_24M, M6.WEIGHT_24M_MIN, M6.WEIGHT_24M_MAX, M6.WEIGHT_24M_AVG, M5.WEIGHT_24M_MED
     , M6.WEIGHT_36M, M6.WEIGHT_36M_MIN, M6.WEIGHT_36M_MAX, M6.WEIGHT_36M_AVG, M5.WEIGHT_36M_MED
     , M6.WEIGHT_48M, M6.WEIGHT_48M_MIN, M6.WEIGHT_48M_MAX, M6.WEIGHT_48M_AVG, M5.WEIGHT_48M_MED
     , M6.WEIGHT_60M, M6.WEIGHT_60M_MIN, M6.WEIGHT_60M_MAX, M6.WEIGHT_60M_AVG, M5.WEIGHT_60M_MED

     , M6.BMI_00M, M6.BMI_00M_MIN, M6.BMI_00M_MAX, M6.BMI_00M_AVG, M5.BMI_00M_MED
     , M6.BMI_03M, M6.BMI_03M_MIN, M6.BMI_03M_MAX, M6.BMI_03M_AVG, M5.BMI_03M_MED
     , M6.BMI_06M, M6.BMI_06M_MIN, M6.BMI_06M_MAX, M6.BMI_06M_AVG, M5.BMI_06M_MED
     , M6.BMI_12M, M6.BMI_12M_MIN, M6.BMI_12M_MAX, M6.BMI_12M_AVG, M5.BMI_12M_MED
     , M6.BMI_24M, M6.BMI_24M_MIN, M6.BMI_24M_MAX, M6.BMI_24M_AVG, M5.BMI_24M_MED
     , M6.BMI_36M, M6.BMI_36M_MIN, M6.BMI_36M_MAX, M6.BMI_36M_AVG, M5.BMI_36M_MED
     , M6.BMI_48M, M6.BMI_48M_MIN, M6.BMI_48M_MAX, M6.BMI_48M_AVG, M5.BMI_48M_MED
     , M6.BMI_60M, M6.BMI_60M_MIN, M6.BMI_60M_MAX, M6.BMI_60M_AVG, M5.BMI_60M_MED

     , M6.HBA1C_00M, M6.HBA1C_00M_MIN, M6.HBA1C_00M_MAX, M6.HBA1C_00M_AVG, M5.HBA1C_00M_MED
     , M6.HBA1C_03M, M6.HBA1C_03M_MIN, M6.HBA1C_03M_MAX, M6.HBA1C_03M_AVG, M5.HBA1C_03M_MED
     , M6.HBA1C_06M, M6.HBA1C_06M_MIN, M6.HBA1C_06M_MAX, M6.HBA1C_06M_AVG, M5.HBA1C_06M_MED
     , M6.HBA1C_12M, M6.HBA1C_12M_MIN, M6.HBA1C_12M_MAX, M6.HBA1C_12M_AVG, M5.HBA1C_12M_MED
     , M6.HBA1C_24M, M6.HBA1C_24M_MIN, M6.HBA1C_24M_MAX, M6.HBA1C_24M_AVG, M5.HBA1C_24M_MED
     , M6.HBA1C_36M, M6.HBA1C_36M_MIN, M6.HBA1C_36M_MAX, M6.HBA1C_36M_AVG, M5.HBA1C_36M_MED
     , M6.HBA1C_48M, M6.HBA1C_48M_MIN, M6.HBA1C_48M_MAX, M6.HBA1C_48M_AVG, M5.HBA1C_48M_MED
     , M6.HBA1C_60M, M6.HBA1C_60M_MIN, M6.HBA1C_60M_MAX, M6.HBA1C_60M_AVG, M5.HBA1C_60M_MED
  FROM COHORT_DATA M1
  LEFT OUTER JOIN @CDM_DB_SCHEMA.CONDITION_DATA           M2 ON M1.PERSON_ID = M2.PERSON_ID /* DKA여부, HHS여부 */
  LEFT OUTER JOIN @CDM_DB_SCHEMA.CONDITION_DATA_DM        M3 ON M1.PERSON_ID = M3.PERSON_ID /* 제1형, 제2형 당뇨병 존재여부 */
  LEFT OUTER JOIN @CDM_DB_SCHEMA.MEASUREMENT_DKA_DATA     M4 ON M1.PERSON_ID = M4.PERSON_ID /* DKA 검사결과값 기반 여부 */
  LEFT OUTER JOIN PRCS_DATA1                              M5 ON M1.PERSON_ID = M5.PERSON_ID /* 중앙값(MEDIAN) 데이터 */
  LEFT OUTER JOIN PRCS_DATA2                              M6 ON M1.PERSON_ID = M6.PERSON_ID /* 중앙값(MEDIAN) 외 데이터 */
  LEFT OUTER JOIN @CDM_DB_SCHEMA.CONDITION_DATA_NEW       M7 ON M1.PERSON_ID = M7.PERSON_ID /* (NEW) DKA여부, HHS여부 */
  LEFT OUTER JOIN @CDM_DB_SCHEMA.MEASUREMENT_DKA_DATA_NEW M8 ON M1.PERSON_ID = M8.PERSON_ID /* (NEW) DKA 검사결과값 기반 여부 */
-- WHERE NVL(M4.HBA1C_00M,0)     >  NVL(M4.HBA1C_03M,0)  /* 신환환자 한정 : 0, 3개월 사이의 HbA1c가 1이상 감소한 경우 */
--   AND NVL(M4.WEIGHT_00M,0)    <  NVL(M4.WEIGHT_03M,0) /* 신환환자 한정 : 0, 3개월 사이의 Weight가 증가한 경우 */
--)
;